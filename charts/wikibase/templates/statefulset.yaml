apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        statefulset-group: {{ .Release.Name }} 
    spec:
      securityContext:
        fsGroup: 33 # www-data
      initContainers:
      - name: setup-apache-logging
        image: busybox
        command:
        - sh
        - -c
        - |
          mkdir -p /var/log/apache2
          ln -sf /dev/stderr /var/log/apache2/error.log
          ln -sf /dev/stdout /var/log/apache2/access.log
          ln -sf /dev/stdout /var/log/apache2/other_vhosts_access.log
        volumeMounts:
        - name: apache-logs-tmp
          mountPath: /var/log/apache2
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
        - containerPort: {{ .Values.port }}
        volumeMounts:
        - name: apache-logs
          mountPath: /var/log/apache2
        - name: mediawiki-cache
          mountPath: /var/www/html/w/images
        - name: oauth-secrets
          mountPath: /var/oauth
          readOnly: true
        env:
        - name: WIKIBASE_SCHEME
          value: "{{ .Values.mediawiki.scheme }}"
        - name: WIKIBASE_HOST
          value: "{{ .Values.global.baseDomain }}"
        - name: WIKIBASE_PORT
          value: "{{ .Values.port }}"
        - name: DB_SERVER
          value: "{{ .Values.mediawiki.db_server }}"
        - name: DB_NAME
          value: "{{ .Values.mediawiki.db_name }}"
        - name: DB_USER
          value: "{{ .Values.mediawiki.db_user }}"
        - name: DB_PRIMARY_IP
          value: "{{ .Values.mediawiki.db_primary }}"
        - name: DB_SECONDARY_IP
          value: "{{ .Values.mediawiki.db_secondary }}"
        - name: MW_ELASTIC_HOST
          value: "{{ .Values.mediawiki.elasticsearch_host }}"
        - name: MW_ELASTIC_PORT
          value: "{{ .Values.mediawiki.elasticsearch_port }}"
        - name: MW_REDIS_HOST
          value: "{{ .Values.mediawiki.redis_host }}"
        - name: MW_REDIS_PORT
          value: "{{ .Values.mediawiki.redis_port }}"
        - name: MW_LATEXML_HOST
          value: "{{ .Values.mediawiki.latexml_host }}"
        - name: MW_LATEXML_PORT
          value: "{{ .Values.mediawiki.latexml_port }}"
        - name: MW_FORMULASEARCH_HOST
          value: "{{ .Values.mediawiki.formulasearch_host }}"
        - name: MW_FORMULASEARCH_PORT
          value: "{{ .Values.mediawiki.formulasearch_port }}"
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.mariadb }}
              key: MARIADB_PASSWORD
        envFrom:
        - configMapRef:
            name: wikibase-config
        - secretRef:
            name: {{ .Release.Name }}-env-secrets
      volumes:
      - name: apache-logs-tmp
        emptyDir:
          medium: Memory
          sizeLimit: 200Mi
      - name: oauth-secrets
        secret:
          secretName: {{ .Release.Name }}-oauth-secrets
          items:
          - key: oauth.key
            path: oauth.key
            mode: 0644
          - key: oauth.cert
            path: oauth.cert
            mode: 0660
  volumeClaimTemplates:
  - metadata:
      name: mediawiki-cache
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: "csi-rbd-sc"
      resources:
        requests:
          storage: {{ .Values.storage.cache.size }}